@use "sass:math";

$grid-columns: 12;

//  Gaps
$grid-gaps : (
    "0" : 0,
    "1" : 10px,
    "2" : 20px,
    "3" : 30px,
    "4" : 40px,
    "5" : 50px,
    "6" : 60px,
    "7" : 70px,
    "8" : 80px,
    "9" : 90px,
    "10" : 100px,
);

// Layout
$layout-values: flex-start, flex-end, center, space-between, space-around;

@each $key, $value in $grid-gaps{
    .grid-#{$key}{
        gap: $value;
    }
}

@each $value in $layout-values{
    .justify-#{$value}{
        justify-content: $value;
    }
}



// Base layout
.container2{
    max-width: 80%;
    margin: 0 auto;
    background-color: deepskyblue;
}
.row{
    display: flex;
    flex-flow: row wrap;
}

// columns Generate
@for $i from 1 through $grid-columns{
    .col-#{$i}{
        width: math.div($i * 100%, $grid-columns);
    }
}
@include xs{
    @for $i from 1 through $grid-columns{
        .col-#{$i}-xs{
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include md{
    @for $i from 1 through $grid-columns{
        .col-#{$i}-md{
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include lg{
    @for $i from 1 through $grid-columns{
        .col-#{$i}-lg{
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include xl{
    @for $i from 1 through $grid-columns{
        .col-#{$i}-xl{
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include xxl{
    @for $i from 1 through $grid-columns{
        .col-#{$i}-xxl{
            width: math.div($i * 100%, $grid-columns);
        }
    }
}